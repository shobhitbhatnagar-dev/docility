// <auto-generated />
using System;
using Docility.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Docility.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("Docility.API.Models.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AttachmentUrl");

                    b.Property<int>("BugId");

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.HasIndex("BugId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("Docility.API.Models.Bug", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AssignedOn");

                    b.Property<int>("AssignedTo");

                    b.Property<string>("AssignedToName");

                    b.Property<string>("Category");

                    b.Property<int>("CategoryId");

                    b.Property<DateTime>("ClosedOn");

                    b.Property<string>("ClosingRemark");

                    b.Property<string>("Description");

                    b.Property<string>("ExpectedResults");

                    b.Property<int?>("ModuleId");

                    b.Property<string>("Priority");

                    b.Property<int>("PriorityId");

                    b.Property<int?>("ProjectId");

                    b.Property<int>("ReportedBy");

                    b.Property<string>("ReportedByName");

                    b.Property<DateTime>("ReportedOn");

                    b.Property<string>("Reproducibility");

                    b.Property<int>("ReproducibilityId");

                    b.Property<string>("Status");

                    b.Property<int>("StatusId");

                    b.Property<string>("Title");

                    b.Property<int?>("WorkgroupId");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("WorkgroupId");

                    b.ToTable("Bugs");
                });

            modelBuilder.Entity("Docility.API.Models.Communication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BugId");

                    b.Property<bool>("IsPrivate");

                    b.Property<string>("Message");

                    b.Property<DateTime>("TimeStamp");

                    b.Property<int?>("UserId");

                    b.Property<int?>("WorkgroupId");

                    b.HasKey("Id");

                    b.HasIndex("BugId");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkgroupId");

                    b.ToTable("Communications");
                });

            modelBuilder.Entity("Docility.API.Models.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Createdby");

                    b.Property<bool>("IsActive");

                    b.Property<string>("ModuleName")
                        .IsRequired();

                    b.Property<int>("ProjectId");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("Docility.API.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Createdby");

                    b.Property<bool>("IsActive");

                    b.Property<string>("ProjectName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Docility.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("EmailId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("LastActive");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.Property<int?>("WorkgroupId");

                    b.Property<string>("role");

                    b.HasKey("Id");

                    b.HasIndex("WorkgroupId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Docility.API.Models.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Key");

                    b.Property<string>("KeyDisplayName");

                    b.Property<string>("KeyValue");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("Docility.API.Models.Workgroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("Id");

                    b.ToTable("Workgroups");
                });

            modelBuilder.Entity("Docility.API.Models.Attachment", b =>
                {
                    b.HasOne("Docility.API.Models.Bug", "Bug")
                        .WithMany("Attachments")
                        .HasForeignKey("BugId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Docility.API.Models.Bug", b =>
                {
                    b.HasOne("Docility.API.Models.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId");

                    b.HasOne("Docility.API.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("Docility.API.Models.Workgroup", "Workgroup")
                        .WithMany()
                        .HasForeignKey("WorkgroupId");
                });

            modelBuilder.Entity("Docility.API.Models.Communication", b =>
                {
                    b.HasOne("Docility.API.Models.Bug", "Bug")
                        .WithMany("Communications")
                        .HasForeignKey("BugId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Docility.API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Docility.API.Models.Workgroup", "Workgroup")
                        .WithMany()
                        .HasForeignKey("WorkgroupId");
                });

            modelBuilder.Entity("Docility.API.Models.Module", b =>
                {
                    b.HasOne("Docility.API.Models.Project", "Projects")
                        .WithMany("Modules")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Docility.API.Models.User", b =>
                {
                    b.HasOne("Docility.API.Models.Workgroup")
                        .WithMany("Users")
                        .HasForeignKey("WorkgroupId");
                });
#pragma warning restore 612, 618
        }
    }
}
